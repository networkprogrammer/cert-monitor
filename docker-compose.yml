services:
  cert-scanner:
    build: ./cert_monitor
    command: python3 main.py
    container_name: cert-scanner
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./db:/db
      - ./cert_monitor/config.yaml:/app/config.yaml
    depends_on:
      - cert-db

  cert-api:
    build: ./cert_api
    command: python3 app.py
    ports:
      - "5001:5000"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./cert_monitor/config.yaml:/app/config.yaml
    depends_on:
      - cert-db
      - cert-scanner

  cert-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: certwatch
      POSTGRES_USER: certuser
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "certuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - "--storage.tsdb.retention.time=60d"

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini

    ports:
      - "3001:3000"

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - cert-db

  cert-cron:
    build:
      context: ./cron
    volumes:
      - ./cron/crontab:/etc/crontabs/root
      - /var/run/docker.sock:/var/run/docker.sock
      - ./cert_monitor/config.yaml:/app/config.yaml
    depends_on:
      - cert-scanner

  db-cleanup:
    build:
      context: ./cert_monitor
    command: python3 cleanup.py
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./cert_monitor/config.yaml:/app/config.yaml
    depends_on:
      - cert-db

  nginx:
    image: nginx:latest
    container_name: nginx-server
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - cert-api
      - prometheus
      - grafana


volumes:
  db-data: